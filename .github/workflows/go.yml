# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: xboot-ci-test

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  convTest:
    name: Test with Coverage
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go env
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.2'
      id: xboot 

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3
      
    - name: Install dependencies
      run: go mod download

    - name: Unit Test
      run: |
        export DISABLE_TEST_DEBUG_LOG=true
        go test -timeout=1800s -covermode atomic -coverprofile=./cover.out ./...

    - uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: true
        files: ./cover.out
        name: codecov-umbrella
        verbose: false
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  raceTest:
    name: Test with race detector
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go env
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.2'
      id: xboot

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3
      
    - name: Install dependencies
      run: go mod download

    - name: Unit Test
      run: |
        export DISABLE_TEST_DEBUG_LOG=true
        go test -timeout=1800s -race -run ^Test.*DataRace.*$ ./... 

  benchTest:
    name: Benchmark Test
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go env
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.2'
      id: xboot

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3
      
    - name: Install dependencies
      run: go mod download

    - name: Unit Test
      run: |
        export DISABLE_TEST_DEBUG_LOG=true
        go test -benchmem -bench ^Benchmark.*$ github.com/benz9527/xboot/lib/list ./...