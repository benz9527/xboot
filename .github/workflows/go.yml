# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: xboot-ci-test

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  convTest:
    name: Test with Coverage
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ["1.22.x"]
        redis-version: ["7-alpine", "6-alpine"]
    services:
      redis:
        image: redis:${{ matrix.redis-version }}
        ports:
          - 6379:6379
    steps:
      - name: Set up Go env
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: true
        id: xboot

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Install dependencies
        run: go mod download

      - name: Unit Test
        run: |
          export DISABLE_TEST_DEBUG_LOG=true
          export REDIS_DLOCK_ADDR=127.0.0.1:6379
          export REDIS_DLOCK_PWD=""
          go test -timeout=1800s -covermode atomic -coverprofile=./cover.out ./...

      - uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          files: ./cover.out
          name: codecov-umbrella
          verbose: false
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  raceTest:
    name: Test with race detector
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ["1.22.x"]
        redis-version: ["7-alpine", "6-alpine"]
    services:
      redis:
        image: redis:${{ matrix.redis-version }}
        ports:
          - 6379:6379
    steps:
      - name: Set up Go env
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: true
        id: xboot

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Install dependencies
        run: go mod download

      - name: Unit Test
        run: |
          export DISABLE_TEST_DEBUG_LOG=true
          export REDIS_DLOCK_ADDR=127.0.0.1:6379
          export REDIS_DLOCK_PWD=""
          go test -timeout=1800s -race -run ^Test.*DataRace.*$ ./lib/id 
          go test -timeout=1800s -race -run ^Test.*DataRace.*$ ./lib/list
          go test -timeout=1800s -race -run ^Test.*DataRace.*$ ./lib/queue
          go test -timeout=1800s -race -run ^Test.*DataRace.*$ ./timer
          go test -timeout=1800s -race -run ^Test.*DataRace.*$ ./lib/kv
          go test -timeout=1800s -race -run ^Test.*DataRace.*$ ./lib/tree
          go test -timeout=1800s -race -run ^Test.*DataRace.*$ ./xlog
          go test -timeout=1800s -race -run ^Test.*DataRace.*$ ./dlock

  benchTest:
    name: Benchmark Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ["1.22.x"]
    steps:
      - name: Set up Go env
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
          check-latest: true
        id: xboot

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Install dependencies
        run: go mod download

      - name: Unit Test
        run: |
          export DISABLE_TEST_DEBUG_LOG=true
          go test -benchmem -bench ^Benchmark.*$ ./lib/list
          go test -benchmem -bench ^Benchmark.*$ ./lib/kv
          go test -benchmem -bench ^Benchmark.*$ ./lib/queue
          go test -benchmem -bench ^Benchmark.*$ ./lib/tree
          go test -benchmem -bench ^Benchmark.*$ ./timer
          go test -benchmem -bench ^Benchmark.*$ ./xlog
